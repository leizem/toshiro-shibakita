http {
    # Melhora o log de erros
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    
    # Define os servidores para o balanceamento de carga com opções avançadas
    upstream all {
        # Habilita checagem de status de saúde dos servidores
        server 172.19.0.3:80 max_fails=3 fail_timeout=30s;
        server 172.19.0.4:80 max_fails=3 fail_timeout=30s;
        server 172.19.0.5:80 max_fails=3 fail_timeout=30s;

        # Algoritmo de balanceamento de carga (round-robin é padrão)
        # Você pode optar por "least_conn" (menos conexões ativas) ou "ip_hash" (para afinidade de IP)
        # Por exemplo: least_conn;
    }

    # Configuração do servidor
    server {
        listen 4500;
        server_name localhost;

        # Timeout de conexão com o backend
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffer para resposta do proxy
        proxy_buffering on;
        proxy_buffers 16 4k;
        proxy_buffer_size 8k;

        location / {
            # Passa as requisições para o grupo "all" (servidores em upstream)
            proxy_pass http://all/;

            # Passa o cabeçalho do host original para o backend
            proxy_set_header Host $host;

            # Cabeçalhos adicionais que são recomendados para passar ao backend
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Garante que as respostas do backend tenham os códigos HTTP corretos
            proxy_intercept_errors on;
        }
    }
}

events {
    # Limita o número de conexões simultâneas por worker
    worker_connections 1024;
}
